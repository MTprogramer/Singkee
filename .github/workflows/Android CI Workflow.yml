name: Android CI Workflow

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '21'

    - name: Set ANDROID_HOME and Update PATH
      run: |
        
        echo "ANDROID_HOME=$HOME/Android/Sdk" >> $GITHUB_ENV
        echo "ANDROID_HOME=$HOME/.android/avd" >> $GITHUB_ENV
        echo "PATH=$ANDROID_HOME/platform-tools:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$PATH" >> $GITHUB_ENV
        echo "export ANDROID_HOME=$HOME/Android/Sdk" >> ~/.bashrc
        echo "export PATH=$ANDROID_HOME/platform-tools:$ANDROID_HOME/cmdline-tools/latest/bin:$PATH" >> ~/.bashrc
        source ~/.bashrc

    - name: Manually Download Command Line Tools
      run: |
       rm -rf $ANDROID_HOME/cmdline-tools
       rm -rf $ANDROID_HOME/platform-tools

        mkdir -p $ANDROID_HOME/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools
        mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
        rm cmdline-tools.zip

    - name: Manually Download & Extract Platform Tools (ADB)
      run: |
        wget https://dl.google.com/android/repository/platform-tools-latest-linux.zip -O platform-tools.zip
        unzip platform-tools.zip -d $ANDROID_HOME
        rm platform-tools.zip
        ls -la $ANDROID_HOME/platform-tools

    - name: Ensure ADB is Installed and Working
      run: |
        chmod +x $ANDROID_HOME/platform-tools/adb
        export PATH=$ANDROID_HOME/platform-tools:$PATH
        which adb || echo "ADB not found in PATH!"
        adb version || echo "ADB command still not found!"
        adb devices || echo "ADB command still not found!"

    - name: Install Emulator
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "emulator"

    - name: Accept Licenses
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

    - name: Install System Image
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --update
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "system-images;android-34;google_apis;x86_64"

    - name: Verify Installed System Images
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list | grep "system-images"
   

    - name: Create AVD
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager list device
        $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test -k "system-images;android-34;google_apis;x86_64" -d pixel_5 --force
        echo "List of AVDs after creation:"
        $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager list avd

        ls -la $ANDROID_AVD_HOME

    - name: Start Emulator
      run: |
          $ANDROID_HOME/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -no-snapshot


        # nohup $ANDROID_HOME/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -no-snapshot -no-audio -verbose -avd-config-path $ANDROID_AVD_HOME/test.avd &
       

          # export ANDROID_AVD_HOME=/home/runner/.config/.android/avd
          # ls -la $ANDROID_AVD_HOME  # Confirm the existence of the .avd folder and test.ini file
          #  nohup $ANDROID_HOME/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -no-snapshot &
          # sleep 60
         

          # export ANDROID_AVD_HOME=$HOME/.android/avd
          # nohup $ANDROID_HOME/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -no-snapshot &
  
          # nohup $ANDROID_HOME/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -no-snapshot -avd-config-path $HOME/.android/avd/test.avd --sdk_root=$ANDROID_HOME &
          # sleep 60
        
      # nohup $ANDROID_HOME/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -no-snapshot -avd-config-path $ANDROID_AVD_HOME/test.avd &
        # nohup $ANDROID_HOME/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -no-snapshot &

    - name: run game 
      run: |
          ls $ANDROID_AVD_HOME
          $ANDROID_HOME/emulator/emulator -list-avds


      

    # - name: Wait for Emulator to Boot
    #   run: |
    #     $ANDROID_HOME/platform-tools/adb -e wait-for-device
    #     $ANDROID_HOME/platform-tools/adb devices

    # - name: Verify AVD
    #   run: |
    #     $ANDROID_HOME/emulator/emulator -list-avds
