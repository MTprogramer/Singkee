name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  instrumentation-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Android SDK
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          echo "export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

      - name: Verify SDK Installation
        run: ls -la $ANDROID_HOME/cmdline-tools/latest/bin  

      - name: List available SDK packages
        run: $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list

      - name: Install SDK components
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "build-tools;35.0.0" "platform-tools" "platforms;android-30" "system-images;android-30;google_apis;x86"
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "emulator"

      - name: Accept SDK licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Generate Debug Keystore
        run: |
          mkdir -p ~/.android
          keytool -genkeypair -v -keystore ~/.android/debug.keystore -keyalg RSA -keysize 2048 -validity 10000 -storepass android -keypass android -dname "CN=Android Debug,O=Android,C=US" -alias androiddebugkey

      - name: Verify Debug Keystore
        run: ls -la ~/.android/debug.keystore

      - name: Clear Gradle Cache
        run: rm -rf ~/.gradle/caches/

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant Execute Permission to Gradlew
        run: chmod +x gradlew

      - name: Build Android Project
        run: ./gradlew assembleDebug assembleAndroidTest

      - name: List Installed System Images
        run: $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list

      - name: Create Emulator
        run: |
          echo no | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test -k "system-images;android-30;google_apis;x86" --device "pixel_4" --force

      - name: Verify Created AVDs
        run: $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager list avd

      - name: Ensure AVD Configuration Exists
        run: ls -la $HOME/.android/avd

      - name: Start Emulator
        run: |
          nohup $ANDROID_HOME/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -no-snapshot &

      - name: Wait for Emulator to Boot
        run: |
          $ANDROID_HOME/platform-tools/adb wait-for-device
          sleep 120
          $ANDROID_HOME/platform-tools/adb shell input keyevent 82  # Unlock the screen

      - name: Run UI Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86
          script: ./gradlew connectedCheck
          emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot
          disable-animations: true
          cores: 2
          avd-name: test
          force-avd-creation: true
          emulator-boot-timeout: 600
