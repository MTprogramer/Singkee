
name: CI CD

on:
  push:
    branches:
      - main
jobs:
#  lint:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4  #fetch code from github

#      - name: make gradle executable
#        run: chmod +x ./gradlew  #ensure permissions with gradle
#
#      - name: Run android lint
#        run: ./gradlew lint   #Start Lint to detect code quality
#
#      - name: Upload lint Report
#        uses: actions/upload-artifact@v4 # Upload artifact
#        with:
#          name: Lint Report
#          path: app/build/reports/lint-results-debug.html
#
#  unit-test:
#    needs:
#      - lint
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Make gradle executable
#        run: chmod +x ./gradlew
#
#      - name: Run Unit Testing
#        run: ./gradlew test
#
#      - name: Upload test report
#        uses: actions/upload-artifact@v4
#        with:
#          name: unit-test-report
#          path: app/build/reports/tests/testDebugUnitTest/

 instumentation-test:
   runs-on: ubuntu-latest
    
   steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
    
    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y wget
        sudo apt-get install -y unzip
        sudo apt-get install -y openjdk-17-jdk
        sudo apt-get install -y lib32z1 lib32ncurses6 lib32stdc++6
    
    - name: Install Android SDK Command Line Tools
      run: |
        mkdir -p $HOME/Android/Sdk
        wget https://dl.google.com/android/repository/commandlinetools-linux-80310.0.0_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip -d $HOME/Android/Sdk
        rm cmdline-tools.zip

    - name: Accept Android SDK licenses
      run: |
        echo "y" | $HOME/Android/Sdk/cmdline-tools/bin/sdkmanager --licenses
        $HOME/Android/Sdk/cmdline-tools/bin/sdkmanager --update

    - name: Install Android SDK packages
      run: |
        $HOME/Android/Sdk/cmdline-tools/bin/sdkmanager "platform-tools" "platforms;android-35" "system-images;android-35;google_apis;x86_64" "build-tools;30.0.3"

    - name: Create AVD for emulator
      run: |
        # Set the AVD home to make sure it's created in the right directory
        export ANDROID_AVD_HOME=$HOME/.android/avd
        
        # Create the AVD with the system image for API 35 (Google APIs)
        echo "no" | $HOME/Android/Sdk/tools/bin/avdmanager create avd -n test -k "system-images;android-35;google_apis;x86_64" --device "pixel_3"

    - name: Start emulator
      run: |
        # Start the emulator with the created AVD
        nohup $HOME/Android/Sdk/emulator/emulator -avd test -no-window -gpu off &
        
        # Wait for the emulator to boot
        adb wait-for-device
        
        # Disable animations to speed up testing
        adb shell settings put global window_animation_scale 0
        adb shell settings put global transition_animation_scale 0
        adb shell settings put global animator_duration_scale 0

    - name: Build the project
      run: ./gradlew build

    - name: Run tests on the emulator
      run: ./gradlew connectedAndroidTest

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: app/build/reports/tests/testDebugUnitTest/testResults/

    - name: Clean up
      run: |
        adb emu kill
            

 static-code-analysis:
    needs:
      - instumentation-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make gradle executable
        run: chmod +x ./gradlew

      - name: Setup JDK !1
        uses: actions/setup-java@v4
        with:
          java-version: 11

      - name: Run sonarclud scan
        run: ./gradlew sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}

        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

