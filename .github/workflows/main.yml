
name: CI CD

on:
  push:
    branches:
      - main
jobs:
#  lint:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4  #fetch code from github

#      - name: make gradle executable
#        run: chmod +x ./gradlew  #ensure permissions with gradle
#
#      - name: Run android lint
#        run: ./gradlew lint   #Start Lint to detect code quality
#
#      - name: Upload lint Report
#        uses: actions/upload-artifact@v4 # Upload artifact
#        with:
#          name: Lint Report
#          path: app/build/reports/lint-results-debug.html
#
#  unit-test:
#    needs:
#      - lint
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Make gradle executable
#        run: chmod +x ./gradlew
#
#      - name: Run Unit Testing
#        run: ./gradlew test
#
#      - name: Upload test report
#        uses: actions/upload-artifact@v4
#        with:
#          name: unit-test-report
#          path: app/build/reports/tests/testDebugUnitTest/

  test:
    runs-on: ${{ matrix.os }}
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g
    timeout-minutes: 15
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            api-level: 23
            target: default
            arch: x86
          - os: ubuntu-24.04
            api-level: 24
            target: playstore
            arch: x86
          - os: macos-13
            api-level: 31
            target: default
            arch: x86_64
          - os: ubuntu-24.04
            api-level: 34
            target: aosp_atd
            arch: x86_64
          - os: ubuntu-latest
            api-level: 35
            target: google_apis
            arch: x86_64

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: build, test and lint
      run: |
        npm install
        npm run build
        npm run lint
        npm test
    - uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: 23

    - uses: actions/cache@v4
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
          ~/.android/debug.keystore
        key: avd-${{ matrix.api-level }}-${{ matrix.os }}-${{ matrix.target }}-${{ matrix.arch }}

    - uses: gradle/actions/setup-gradle@v4

    - name: assemble tests
      working-directory: test-fixture
      run: ./gradlew assembleAndroidTest

    - name: enable KVM for linux runners
      if: runner.os == 'Linux'
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
    - name: run emulator to generate snapshot for caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: ./
      with:
        api-level: ${{ matrix.api-level }}
        target: ${{ matrix.target }}
        arch: ${{ matrix.arch }}
        profile: Galaxy Nexus
        cores: 2
        sdcard-path-or-size: 100M
        avd-name: test
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: false
        working-directory: ./test-fixture/
        channel: canary
        script: echo "Generated AVD snapshot for caching."

    - name: run action
      uses: ./
      with:
        api-level: ${{ matrix.api-level }}
        target: ${{ matrix.target }}
        arch: ${{ matrix.arch }}
        profile: Galaxy Nexus
        cores: 2
        ram-size: 2048M
        sdcard-path-or-size: 100M
        avd-name: test
        force-avd-creation: false
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        working-directory: ./test-fixture/
        channel: canary
        pre-emulator-launch-script: |
          echo "Running pre emulator launch script. Printing the working directory now:"
          pwd
        script: |
          echo $GITHUB_REPOSITORY
          adb devices
          ./gradlew connectedDebugAndroidTest

  instumentation-test:
   runs-on: ubuntu-latest
   steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up JDK 11 (required for Gradle)
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin' 


      # Enable KVM for the emulator (for better performance)
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      # Run the Android Emulator and perform the tests
      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 35
          script: ./gradlew connectedCheck
          emulator-options: -no-window # Run emulator headless for CI



  static-code-analysis:
    needs:
      - instumentation-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make gradle executable
        run: chmod +x ./gradlew

      - name: Setup JDK !1
        uses: actions/setup-java@v4
        with:
          java-version: 11

      - name: Run sonarclud scan
        run: ./gradlew sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}

        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

