
name: CI CD

on:
  push:
    branches:
      - main
jobs:
#  lint:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4  #fetch code from github

#      - name: make gradle executable
#        run: chmod +x ./gradlew  #ensure permissions with gradle
#
#      - name: Run android lint
#        run: ./gradlew lint   #Start Lint to detect code quality
#
#      - name: Upload lint Report
#        uses: actions/upload-artifact@v4 # Upload artifact
#        with:
#          name: Lint Report
#          path: app/build/reports/lint-results-debug.html
#
#  unit-test:
#    needs:
#      - lint
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Make gradle executable
#        run: chmod +x ./gradlew
#
#      - name: Run Unit Testing
#        run: ./gradlew test
#
#      - name: Upload test report
#        uses: actions/upload-artifact@v4
#        with:
#          name: unit-test-report
#          path: app/build/reports/tests/testDebugUnitTest/

 instumentation-test:
  runs-on: ubuntu-latest
  steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install AVD and System Image for API 35
        run: |
          # Install the system image for API level 35 (Google APIs, x86_64)
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "system-images;android-35;google_apis;x86_64"
          
          # Create an AVD named 'test' with the system image for API 35
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test -k "system-images;android-35;google_apis;x86_64" --device "pixel_4"

      - name: Start Emulator
        run: |
          # Start the emulator in the background
          nohup $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window -gpu swiftshader_indirect &

          # Wait for the device to boot
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'

      - name: Run Tests
        run: ./gradlew test
            

 static-code-analysis:
    needs:
      - instumentation-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make gradle executable
        run: chmod +x ./gradlew

      - name: Setup JDK !1
        uses: actions/setup-java@v4
        with:
          java-version: 11

      - name: Run sonarclud scan
        run: ./gradlew sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}

        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

